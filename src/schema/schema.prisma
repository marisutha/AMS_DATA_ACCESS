// Generator configuration for Prisma Client
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "linux-musl"]
}

// Datasource configuration for PostgreSQL
datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

// This is the Asset table and its fields
model Asset {
  AssetID           Int                @id(map: "PK_Asset") @default(autoincrement())  
  AssetName         String             @db.VarChar(50)                                     
  AssetCode         String             @unique @db.VarChar(50)                           
  SerialNumber      String             @unique @db.VarChar(50)                          
  CategoryID        Int                                                     
  Status            String             @db.VarChar(50)                                  
  PurchaseDate      DateTime?                                               
  Model             String             @db.VarChar(50)                                    
  LocationID        Int                                                      
  UserID            Int?                                                   
  CreatedBy         String             @db.VarChar(50)                                  
  CreatedDate       DateTime           @default(now()) @db.Timestamp(6)                
  IsDeleted         Boolean            @default(false)                                   
  ModifiedBy        String?            @db.VarChar(50)                                   
  ModifiedDate      DateTime?          @db.Timestamp(6)                                 

  // Relations
  Category          Category           @relation(fields: [CategoryID], references: [CategoryID])  // Link to Category model
  Location          Location           @relation(fields: [LocationID], references: [LocationID])  // Link to Location model
  User              User?              @relation(fields: [UserID], references: [UserID])        // Link to User model (optional)
  AssetMaintenances AssetMaintenance[] // Reverse constraint: Relation from Asset model to AssetMaintenance model
}

// This is the User table and its fields
model User {
  UserID            Int                @id(map: "PK_User") @default(autoincrement())  
  UserName          String             @unique                                           
  UserCode          String             @db.VarChar(50)                                 
  LocationID        Int                                                     
  DepartmentID      Int                                                    
  JoiningDate       DateTime           @db.Timestamp(6)                                 
  RelievedDate      DateTime?          @db.Timestamp(6)                                 
  Status            String             @db.VarChar(50)                                 
  CreatedBy         String             @db.VarChar(50)                                   
  CreatedDate       DateTime           @default(now()) @db.Timestamp(6)                  
  IsDeleted         Boolean            @default(false)                                   
  ModifiedBy        String?            @db.VarChar(50)                                   
  ModifiedDate      DateTime?          @db.Timestamp(6)                                  

  // Relations
  Location          Location           @relation(fields: [LocationID], references: [LocationID])   // Link to Location model
  Department        Department         @relation(fields: [DepartmentID], references: [DepartmentID])  // Link to Department model
  Asset             Asset[]            // Reverse constraint: Relation from User model to Asset model
  AssetMaintenances AssetMaintenance[]  // Reverse constraint: Relation from User model to AssetMaintenance model
}

// This is the AssetMaintenance table and its fields
model AssetMaintenance {
  MaintenanceID Int       @id(map: "PK_AssetMaintenance") @default(autoincrement())  
  AssetID       Int                                                      
  UserID        Int                                                      
  Issue         String    @db.VarChar(50)                                     
  StartDate     DateTime                                                    
  EndDate       DateTime?                                                   
  Status        String    @db.VarChar(50)                                   
  Description   String?   @db.VarChar(100)                                    
  CreatedBy     String    @db.VarChar(50)                                    
  CreatedDate   DateTime  @default(now()) @db.Timestamp(6)                  
  IsDeleted     Boolean   @default(false)                                  
  ModifiedBy    String?   @db.VarChar(50)                                   
  ModifiedDate  DateTime? @db.Timestamp(6)                                  

  // Relations
  Asset         Asset     @relation(fields: [AssetID], references: [AssetID]) 
  User          User      @relation(fields: [UserID], references: [UserID])    
}

// This is the Category table and its fields
model Category {
  CategoryID   Int       @id(map: "PK_Category") @default(autoincrement())  
  CategoryName String    @db.VarChar(50)                                      
  CategoryCode String    @db.VarChar(50)                                       
  CreatedBy    String    @db.VarChar(50)                                       
  CreatedDate  DateTime  @default(now()) @db.Timestamp(6)                      
  IsDeleted    Boolean   @default(false)                                       
  ModifiedBy   String?   @db.VarChar(50)                                       
  ModifiedDate DateTime? @db.Timestamp(6)                                      

  // Relations
  Asset        Asset[]  // Reverse constraint: Relation from Category model to Asset model
}

// This is the Department table and its fields
model Department {
  DepartmentID   Int       @id(map: "PK_Department") @default(autoincrement())  
  DepartmentName String    @db.VarChar(50)                                          
  DepartmentCode String    @db.VarChar(50)                                          
  CreatedBy      String    @db.VarChar(50)                                          
  CreatedDate    DateTime  @default(now()) @db.Timestamp(6)                         
  IsDeleted      Boolean   @default(false)                                        
  ModifiedBy     String?   @db.VarChar(50)                                          
  ModifiedDate   DateTime? @db.Timestamp(6)                                         

  // Relations
  User           User[]  // Reverse constraint: Relation from Department model to User model
}

// This is the Location table and its fields
model Location {
  LocationID   Int       @id(map: "PK_Location") @default(autoincrement())  
  LocationName String    @db.VarChar(50)                                      
  LocationCode String    @db.VarChar(50)                                       
  CreatedBy    String    @db.VarChar(50)                                       
  CreatedDate  DateTime  @default(now()) @db.Timestamp(6)                    
  IsDeleted    Boolean   @default(false)                                       
  ModifiedBy   String?   @db.VarChar(50)                                    
  ModifiedDate DateTime? @db.Timestamp(6)                                    

  // Relations
  User         User[]  // Reverse constraint: Relation from Location model to User model
  Asset        Asset[]  // Reverse constraint: Relation from Location model to Asset model
}
